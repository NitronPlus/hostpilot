hp ts（文件/目录 传输） 规范与语义（简明）

目的：定义 `hp ts` 命令在本地与远端之间上传/下载文件和目录时的行为规则，便于用户预期与脚本使用。

基本语法示例：

- 下载（远端 -> 本地）:
  - `hp ts <alias>:<remote_path> <local_target> [options]`
  - 示例：`hp ts hdev:~/project/dist dist -c 4 -r 1 -v`

- 上传（本地 -> 远端）:
  - `hp ts <local_path> <alias>:<remote_target> [options]`
  - 示例：`hp ts dist hdev:~/project/dist -c 4 -r 1 -v`

行为规则（A–L，已实现）：

A. 目标归属：
  - 如果目标参数包含 `:`（例如 `alias:path`），视为远端目标或远端源；否则视为本地路径。

B. 相对本地目标自动前缀 `./`：
  - 当本地目标是相对路径且未以 `./` 或 `../` 开头时，会自动在内部解释为 `./<target>`，以降低误操作风险。

C. 远端为目录时的写入位置：
  - 如果远端源是目录（例如 `hdev:~/project/dist`），且本地目标不存在或为目录，命令会在本地创建目标目录（如 `./dist`）并将远端目录下的文件按相对路径放入 `target/rel`（例如 `./dist/sub/file.txt`）。

D. 远端为单文件时的行为：
  - 如果远端源是单个文件（例如 `hdev:~/project/README.md`）且本地目标为路径：
    - 如果本地目标为目录，则将文件写入该目录下（保留源文件名）。
    - 如果本地目标为文件（存在或不存在），则写入为该文件路径（覆盖或创建）。

E. 原子写入（避免 0 字节文件）:
  - 下载/上传时，文件先写入临时文件（形如 `name.hp.part.<pid>`），完成并调用 `sync_all` 后原子重命名到目标文件名；失败不会留下不完整的目标文件。

F. 并发与会话复用：
  - 支持 `-c/--concurrency` 控制并发会话数；每个 worker 重用会话与缓冲区以减少内存分配开销。

G. 认证方式（不依赖 ssh-agent）:
  - 当前实现**不依赖**系统 `ssh-agent`，默认尝试用户目录下的私钥文件（例如 `~/.ssh/id_ed25519`、`id_rsa` 等）。agent 相关错误不再导致操作失败；会记录调试日志供排查。

H. 重试策略：
  - 支持 `-r/--retries` 来重试单个文件的传输（网络/IO 错误）。全局失败会在日志中显示失败原因与次数。

I. 日志与可观察性：
  - 内置 `tracing` 日志，支持通过环境变量 `RUST_LOG=debug` 打开详细日志。建议在排查问题时使用并保存输出。

J. 失败持久化与错误上下文：
  - 传输失败会返回带有上下文的错误信息（无 panic）。建议搭配 `--verbose` 或 `RUST_LOG=debug` 使用以获得更多上下文。

K. 本地 “.” 与 “./” 的处理：
  - 当目标为本地并写作 `.` 或 `./` 时，规范化为当前工作目录（CWD）的实际路径后再进行写入。

L. 方向约束：
  - 上传（本地→远端）支持多个源参数；下载（远端→本地）仅支持单个远端源参数。

常用调试命令（PowerShell）：
```
$env:RUST_LOG="debug"; hp ts hdev:~/project/dist dist -c 4 -r 1 -v 2>&1 | Tee-Object hp-ts-run.log
```

注意事项：
- 若你在项目中使用 CI / 自动化脚本，请确保远端 alias 在本地配置中可用，且有可访问的私钥文件。
- 若需要严格语义（例如禁止自动创建本地目录），请与我说明，我可以添加 `--strict-target` 模式来按规则拒绝不明确的目标行为。

限制说明：
 - 本应用不支持同时指定多个远端（即命令中只允许一端为远端），未来也不会支持多远端同时传输的场景。
 - 不支持复杂的 glob 语法（例如 `source/*/`、`source/**/` 或其他类似递归 glob 扩展）。支持的 glob 仅限基础的 `*` 与 `?`，并且 glob 展开仅在源端进行（远端在远端展开，本地在本地展开）。当前实现不支持 `-R/--recursive` 选项；当需要递归复制目录内容时，请显式指定源目录（是否带尾部 `/` 效果等同，均表示复制目录内容，不含容器）。

  允许 / 禁止示例（明确规则）：

  - 允许（仅在 basename 使用通配符）：
    - `hp ts hdev:~/logs/*.log ./downloads` （匹配远端 `logs` 目录下的 `.log` 文件）
    - `hp ts ./dist/*.wasm hdev:~/deploy/` （本地 glob 在本地展开）

  - 禁止（中间段通配符或递归 glob）：
    - `hp ts hdev:~/src/*/file.txt ./` （中间段 `*` 会被拒绝）
    - `hp ts hdev:~/src/**/file.txt ./` （`**` 不被支持）

  - 目标不得包含通配符（会报错）：
    - 错误示例：`hp ts hdev:~/logs/*.log ./out/*.log`

  - 如果源 glob 未匹配任何项，命令会返回错误；需要复制目录全部内容时请使用目录尾部 `/`。

补充短语（重要提醒）:

- “目录源无论是否带尾部 /，均表示递归复制目录内容（不含顶层目录容器）。”
- “glob 若无匹配项则视为错误并退出（请确认 glob 模式与路径是否正确）。”
- “目标创建：当目标不存在且其父目录存在时会创建目标目录（等同 mkdir <target>）；若父目录不存在则报错（不会自动执行 mkdir -p）。”

示例（推荐对照）：
- `hp ts hdev:~/dir dist` 与 `hp ts hdev:~/dir/ dist` 等效，均将远端 `dir` 的内容复制到本地 `dist/` 下。
- `hp ts hdev:~/d* dist`：若匹配到目录，仅创建目录条目，不递归其内容；glob 无匹配即报错。

更多示例与长说明请参见 `TRANSFER.md`（仓库根目录）。
（注：已在 `TRANSFER.md` 中新增“更详细示例集”，包含允许/禁止 glob 示例与常见用法示例。）

